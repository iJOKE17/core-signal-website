version: "2" # version ของ docker compose
services:
    # Php สำหรับการสร้าง php container
    php:
        build: . # ชี้ไป path ของ Dockerfile เพื่อที่จะใช้ในการสร้าง container
        working_dir: /var/www/laravel # directory ที่จะเป็นจัดที่เราทำงาน
        volumes:
            # เป็น volume ไฟล์ จากเครื่องเราไปยัง container จะเป็นการเชื่อมต่อกันแบบ
            # ถ้าไฟล์ในเครื่องเราเปลี่ยนแปลงใน container ก็จะเปลี่ยนแปลงตามครับ
            - ./:/var/www/laravel
        networks:
            - app-network

    # Web Server สำหรับการสร้าง nginx container
    nginx:
        build: ./docker-nginx
        working_dir: /var/www/laravel # directory ที่จะเป็นจัดที่เราทำงาน
        volumes_from:
            - php # คือการ volume จาก php container นะครับ
        ports:
            - 8000:80 # port ที่เราต้องการจะใช้ระหว่าง {host}:{container} นะครับ
        networks:
            - app-network

    # Database คือ mysql container ครับ เพื่อที่จะทำเป็น database
    database:
        # ส่วนนี้เราจะดึง image มาตรง ๆ เลยครับโดยที่เราไม่สร้าง Dockerfile
        # เพราะเราไม่ต้องการจะ เซตคำสั่งอะไรเพิ่มเติมแล้ว
        image: mysql:5.7
        volumes:
            - ./mysql/data:/var/lib/mysql # ครับเช่นเคย volume database เข้ามาในเครื่องเราที่จะเก็บข้อมูลใน database ไว้
        container_name: database
        restart: unless-stopped
        tty: true
        environment:
            MYSQL_DATABASE: core-signal
            MYSQL_USER: core-signal
            MYSQL_PASSWORD: example
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - "3306:3306" # port ที่เราต้องการจะใช้ระหว่าง {host}:{container} นะครับ
        networks:
            - app-network

    composer: # เป็น container สำหรับการรัน install package laravel ที่จะสั่งรันครั้งเดียวแล้วหยุดรัน container ไป
        build: . # ใช้ dockerfile เดียวกันกับ container php
        working_dir: /var/www/laravel
        volumes_from:
            - php
        command: "composer install" # คำสั่ง สำหรับ install package

    # Phpmyadmin (optional) อันนี้เพิ่มเติม หากว่าเราต้องการที่จะ explore database อันนี้ขี้เกียจอธิบายละ 5555
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - 8890:80
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=database
        restart: always
        depends_on:
            - database
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
